{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Complex64 from '@stdlib/complex-float32';\nimport ceilf from '@stdlib/math-base-special-ceilf';\nimport realf from '@stdlib/complex-realf';\nimport imagf from '@stdlib/complex-imagf';\n\n\n// MAIN //\n\n/**\n* Rounds a complex number toward positive infinity.\n*\n* @param {Complex64} z - complex number\n* @returns {Complex64} result\n*\n* @example\n* import Complex64 from '@stdlib/complex-float32';\n* import realf from '@stdlib/complex-realf';\n* import imagf from '@stdlib/complex-imagf';\n*\n* var v = cceilf( new Complex64( -1.5, 2.5 ) );\n* // returns <Complex64>\n*\n* var re = realf( v );\n* // returns -1.0\n*\n* var im = imagf( v );\n* // returns 3.0\n*/\nfunction cceilf( z ) {\n\treturn new Complex64( ceilf( realf( z ) ), ceilf( imagf( z ) ) );\n}\n\n\n// EXPORTS //\n\nexport default cceilf;\n"],"names":["cceilf","z","Complex64","ceilf","realf","imagf"],"mappings":";;gVAkDA,SAASA,EAAQC,GAChB,OAAO,IAAIC,EAAWC,EAAOC,EAAOH,IAAOE,EAAOE,EAAOJ,IAC1D"}